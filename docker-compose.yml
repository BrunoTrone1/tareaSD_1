services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_URL: "mongodb://admin:admin@mongo:27017/?authSource=admin"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--bind", "0.0.0.0", "--protected-mode", "no"]

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis

  scraper:
    build:
      context: .
    container_name: scraper
    restart: on-failure
    environment:
      - MONGO_URI=mongodb://admin:admin@mongo:27017/?authSource=admin
      - MONGO_DB=waze_db
      - MONGO_COLLECTION=alerts
    command: ["python", "-m", "scraper.scraper"]
    depends_on:
      - mongo

  almacenamiento:
    build:
      context: .
    container_name: almacenamiento
    restart: on-failure
    environment:
      - MONGO_URI=mongodb://admin:admin@mongo:27017/?authSource=admin
      - MONGO_DB=waze_db
      - MONGO_COLLECTION=alerts
    command: ["python", "-m", "almacenamiento.almacenamiento"]
    depends_on:
      - mongo

  generador_trafico:
    build:
      context: .
    container_name: generador_trafico
    restart: on-failure
    environment:
      - MONGO_URI=mongodb://admin:admin@mongo:27017/?authSource=admin
      - MONGO_DB=waze_db
      - MONGO_COLLECTION=alerts
      - DISTRIBUCION=poisson
      - LAMBDA=2
      - INTERVALO_UNIFORME=1
      - CACHE_POLICY=LRU
      - CACHE_CAPACITY=100
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    command: ["python", "-m", "generador_trafico.generador_trafico"]
    depends_on:
      - mongo
      - redis

volumes:
  mongo_data:
